/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;


import Controllers.InstructionOfCourseController;
import Models.CoursesDbModel;
import Models.DatabaseModel;
import Models.InstructionOfCourseDbModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author gurkay
 */
public class JInternalFrameInstructionOfCourseAdd extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameInstructionOfCourseAdd
     */
    public JInternalFrameInstructionOfCourseAdd() {
        initComponents();
        showInstructor();
        showCourses();
    }

    /**
     * Show All Instructor Of Courses
     */
    public void showInstructorOfCourses(int accountID) {
        try {
            JTable tblInstructorCoursesList = new JTable();

            InstructionOfCourseDbModel instructionOfCourseDbModel = new InstructionOfCourseDbModel();
            List<Object[]> result = instructionOfCourseDbModel.instructorOfCoursesFindRecord(accountID);

            String arrayHeader[] = {"Courses Name", "Courses Credit", "Courses Code"};
            DefaultTableModel table = new DefaultTableModel(arrayHeader, 0);
            for (Object[] courses : result) {
                table.addRow(courses);
            }

            tblInstructorCoursesList.setModel(table);

            jScrollPaneInstructorCoursesList.setViewportView(tblInstructorCoursesList);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getStackTrace());
        }

    }

    /**
     * Show All Courses
     */
    public void showCourses() {

        CoursesDbModel coursesDbModel = new CoursesDbModel();

        List<Object[]> result = coursesDbModel.coursesShowAllRecord();

        String arrayHeader[] = {"Courses ID", "Courses Name", "Courses Credit", "Courses Code"};
        DefaultTableModel table = new DefaultTableModel(arrayHeader, 0);
        for (Object[] courses : result) {
            table.addRow(courses);
        }
        tblCoursesList.setModel(table);
        jScrollPaneCoursesList.setViewportView(tblCoursesList);
    }

    /**
     * Show All Instructors
     */
    public void showInstructor() {

        DatabaseModel databaseModel = new DatabaseModel();

        List<Object[]> result = databaseModel.accountInstructorShowAllRecord();

        String arrayHeader[] = {"Account ID", "TC", "User Name", "First Name", "Last Name", "Status"};
        DefaultTableModel table = new DefaultTableModel(arrayHeader, 0);
        for (Object[] instructors : result) {
            table.addRow(instructors);
        }
        tblInstructorList.setModel(table);
        jScrollPaneInstructorList.setViewportView(tblInstructorList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRecordButtonSet = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        pnlCoursesInfo = new javax.swing.JPanel();
        lblInstructorList = new javax.swing.JLabel();
        lblInstructorFirstName = new javax.swing.JLabel();
        txtInstructorFirstName = new javax.swing.JTextField();
        lblInstructorLastName = new javax.swing.JLabel();
        txtInstructorLastName = new javax.swing.JTextField();
        jScrollPaneInstructorList = new javax.swing.JScrollPane();
        tblInstructorList = new javax.swing.JTable();
        lblInstructorTc = new javax.swing.JLabel();
        txtInstructorTc = new javax.swing.JTextField();
        jScrollPaneCoursesList = new javax.swing.JScrollPane();
        tblCoursesList = new javax.swing.JTable();
        lblCoursesList = new javax.swing.JLabel();
        jScrollPaneInstructorCoursesList = new javax.swing.JScrollPane();
        tblInstructorCoursesList = new javax.swing.JTable();
        lblInstructorOfCoursesList = new javax.swing.JLabel();
        lblAccountID = new javax.swing.JLabel();

        setClosable(true);

        pnlRecordButtonSet.setBackground(new java.awt.Color(244, 130, 17));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");

        btnDelete.setText("Delete");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRecordButtonSetLayout = new javax.swing.GroupLayout(pnlRecordButtonSet);
        pnlRecordButtonSet.setLayout(pnlRecordButtonSetLayout);
        pnlRecordButtonSetLayout.setHorizontalGroup(
            pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecordButtonSetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        pnlRecordButtonSetLayout.setVerticalGroup(
            pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecordButtonSetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCoursesInfo.setBackground(new java.awt.Color(222, 171, 123));

        lblInstructorList.setText("Instructor List");

        lblInstructorFirstName.setText("Instructor First Name");

        txtInstructorFirstName.setEditable(false);

        lblInstructorLastName.setText("Instructor Last Name");

        txtInstructorLastName.setEditable(false);

        tblInstructorList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInstructorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInstructorListMouseClicked(evt);
            }
        });
        jScrollPaneInstructorList.setViewportView(tblInstructorList);
        if (tblInstructorList.getColumnModel().getColumnCount() > 0) {
            tblInstructorList.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            tblInstructorList.getColumnModel().getColumn(3).setHeaderValue("Title 4");
            tblInstructorList.getColumnModel().getColumn(4).setHeaderValue("Title 5");
            tblInstructorList.getColumnModel().getColumn(5).setHeaderValue("Title 6");
        }

        lblInstructorTc.setText("TC");

        txtInstructorTc.setEditable(false);

        tblCoursesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCoursesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCoursesListMouseClicked(evt);
            }
        });
        jScrollPaneCoursesList.setViewportView(tblCoursesList);
        if (tblCoursesList.getColumnModel().getColumnCount() > 0) {
            tblCoursesList.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            tblCoursesList.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        lblCoursesList.setText("Courses List");

        tblInstructorCoursesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Courses Name", "Courses Credit", "Curses Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInstructorCoursesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInstructorCoursesListMouseClicked(evt);
            }
        });
        jScrollPaneInstructorCoursesList.setViewportView(tblInstructorCoursesList);

        lblInstructorOfCoursesList.setText("Intructor Of Courses List");

        lblAccountID.setText("Account ID");

        javax.swing.GroupLayout pnlCoursesInfoLayout = new javax.swing.GroupLayout(pnlCoursesInfo);
        pnlCoursesInfo.setLayout(pnlCoursesInfoLayout);
        pnlCoursesInfoLayout.setHorizontalGroup(
            pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneInstructorList)
                    .addComponent(jScrollPaneCoursesList)
                    .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCoursesInfoLayout.createSequentialGroup()
                                    .addComponent(lblInstructorTc)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtInstructorTc, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                                    .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblInstructorLastName)
                                        .addComponent(lblInstructorFirstName))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                    .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtInstructorFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtInstructorLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lblInstructorList))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                                .addComponent(lblInstructorOfCoursesList)
                                .addGap(0, 166, Short.MAX_VALUE))
                            .addComponent(jScrollPaneInstructorCoursesList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCoursesList)
                            .addComponent(lblAccountID))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCoursesInfoLayout.setVerticalGroup(
            pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAccountID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInstructorTc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstructorTc))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInstructorFirstName)
                            .addComponent(txtInstructorFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCoursesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInstructorLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstructorLastName))
                        .addGap(22, 22, 22)
                        .addComponent(lblInstructorList))
                    .addGroup(pnlCoursesInfoLayout.createSequentialGroup()
                        .addComponent(lblInstructorOfCoursesList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneInstructorCoursesList, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneInstructorList, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCoursesList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCoursesList, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCoursesInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlRecordButtonSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCoursesInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlRecordButtonSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        InstructionOfCourseDbModel instructionOfCourseDbModel = new InstructionOfCourseDbModel();
        InstructionOfCourseController instructionOfCourseController = new InstructionOfCourseController();
        CoursesDbModel coursesDbModel = new CoursesDbModel();
        
        if (Integer.parseInt(lblAccountID.getText()) > 0) {

                instructionOfCourseDbModel.deleteRecord(Integer.parseInt(lblAccountID.getText()));
                
                DefaultTableModel model = (DefaultTableModel) tblInstructorCoursesList.getModel(); 
                
                List<String> numdata = new ArrayList<String>();
                for (int count = 0; count < model.getRowCount(); count++) {
                    for (int i = 0; i < model.getColumnCount(); i++) {
                        numdata.add(model.getValueAt(count, i).toString());
                    }
                    instructionOfCourseController.setCourseCode(model.getValueAt(count, 2).toString());
                    instructionOfCourseController.setAccountId(Integer.parseInt(lblAccountID.getText()));
                    instructionOfCourseController.setCoursesId(coursesDbModel.coursesIDFind(model.getValueAt(count, 2).toString()));
                    instructionOfCourseDbModel.instructionOfCourseRecord(instructionOfCourseController);
                }

                System.out.println(numdata);



        } else {
            JOptionPane.showMessageDialog(null, "Select Instructor");
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void tblInstructorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInstructorListMouseClicked
        try {

            int selectedRow = tblInstructorList.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblInstructorList.getModel();

            lblAccountID.setText(model.getValueAt(selectedRow, 0).toString());
            txtInstructorTc.setText(model.getValueAt(selectedRow, 1).toString());
            txtInstructorFirstName.setText(model.getValueAt(selectedRow, 3).toString());
            txtInstructorLastName.setText(model.getValueAt(selectedRow, 4).toString());

            // tblInstructorCoursesList clear because new table create
            DefaultTableModel modelInstructorOfCourses = (DefaultTableModel) tblInstructorCoursesList.getModel();

            if (modelInstructorOfCourses.getRowCount() > 0) {
                while (modelInstructorOfCourses.getRowCount() > 0) {
                    for (int i = 0; i < modelInstructorOfCourses.getRowCount(); i++) {
                        modelInstructorOfCourses.removeRow(i);
                    }
                }
            }

            showInstructorOfCourses(Integer.parseInt(model.getValueAt(selectedRow, 0).toString()));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getStackTrace());
        }

    }//GEN-LAST:event_tblInstructorListMouseClicked

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tblCoursesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCoursesListMouseClicked
        int selectedRow = tblCoursesList.getSelectedRow();
        DefaultTableModel modelCourses = (DefaultTableModel) tblCoursesList.getModel();

        String courseCode = modelCourses.getValueAt(selectedRow, 3).toString();

        if (filter(courseCode)) {

            JOptionPane.showMessageDialog(null, "Same Course !");

        } else {
            DefaultTableModel modelInstructorOfCourses = (DefaultTableModel) tblInstructorCoursesList.getModel();
            String arrayHeader[] = {"Courses Name", "Courses Credit", "Courses Code"};
            modelInstructorOfCourses.addRow(new Object[]{modelCourses.getValueAt(selectedRow, 1).toString(),
                modelCourses.getValueAt(selectedRow, 2).toString(),
                modelCourses.getValueAt(selectedRow, 3).toString()});
            tblInstructorCoursesList.setModel(modelInstructorOfCourses);
            jScrollPaneInstructorCoursesList.setViewportView(tblInstructorCoursesList);
        }

    }//GEN-LAST:event_tblCoursesListMouseClicked

    /**
     * To Filter Table Row data info
     */
    private boolean filter(String query) {
        boolean status = true;
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tblInstructorCoursesList.getModel());
        tblInstructorCoursesList.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
        if (tblInstructorCoursesList.getRowCount() > 0) {
            status = true;
            query = "";
            tr.setRowFilter(RowFilter.regexFilter(query));
        } else {
            status = false;
            query = "";
            tr.setRowFilter(RowFilter.regexFilter(query));
        }
        return status;
    }

    private void tblInstructorCoursesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInstructorCoursesListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblInstructorCoursesListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPaneCoursesList;
    private javax.swing.JScrollPane jScrollPaneInstructorCoursesList;
    private javax.swing.JScrollPane jScrollPaneInstructorList;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblCoursesList;
    private javax.swing.JLabel lblInstructorFirstName;
    private javax.swing.JLabel lblInstructorLastName;
    private javax.swing.JLabel lblInstructorList;
    private javax.swing.JLabel lblInstructorOfCoursesList;
    private javax.swing.JLabel lblInstructorTc;
    private javax.swing.JPanel pnlCoursesInfo;
    private javax.swing.JPanel pnlRecordButtonSet;
    private javax.swing.JTable tblCoursesList;
    private javax.swing.JTable tblInstructorCoursesList;
    private javax.swing.JTable tblInstructorList;
    public javax.swing.JTextField txtInstructorFirstName;
    public javax.swing.JTextField txtInstructorLastName;
    public javax.swing.JTextField txtInstructorTc;
    // End of variables declaration//GEN-END:variables
}
