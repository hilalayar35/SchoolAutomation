/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.AccountController;
import Controllers.AddCourseStudentController;
import Controllers.GlobalConstants;
import Models.AddCourseStudentModel;
import Models.DatabaseModel;
import Models.InstructionOfCourseDbModel;
import Views.JFrameMainStudent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author gurkay
 */
public class JIntFrmAddCoursesOfStudent extends javax.swing.JInternalFrame {

    JFrameMainStudent jFrameMainStudent;

    /**
     * Creates new form JIntFrmAddCoursesOfStudent
     */
    public JIntFrmAddCoursesOfStudent() {
        initComponents();
        showAddCourseOfStudent();
        showInstructorOfCourses();
        showLableInfoAccount();

    }
    
    /**
     * Show All Student Of Courses
     */
    public void showAddCourseOfStudent() {
        try {
            AddCourseStudentModel addCourseStudentModel = new AddCourseStudentModel();

            List<Object[]> result = addCourseStudentModel.coursesOfStudentList(GlobalConstants.globalConst_account_id);
            
            String arrayHeader[] = {"Courses Code", "Courses Name", "Courses Credit", "First Name", "Last Name"};
            DefaultTableModel table = new DefaultTableModel(arrayHeader, 0);
            for (Object[] courses : result) {
                table.addRow(courses);

            }

            tblCoursesOfStudentList.setModel(table);
            jScrPnICoursesOfStudentList.setViewportView(tblCoursesOfStudentList);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getStackTrace());
        }

    }

    /**
     * Show All Instructor Of Courses
     */
    public void showInstructorOfCourses() {
        try {
            AddCourseStudentModel addCourseStudentModel = new AddCourseStudentModel();

            List<Object[]> result = addCourseStudentModel.instructorOfCoursesFindRecord();

            String arrayHeader[] = {"Account ID", "Courses Code", "Courses Name", "Courses Credit", "First Name", "Last Name"};
            DefaultTableModel table = new DefaultTableModel(arrayHeader, 0);
            for (Object[] courses : result) {
                table.addRow(courses);

            }

            tblInstructorOfCoursesList.setModel(table);
            jScrollPaneInstructorOfCoursesList.setViewportView(tblInstructorOfCoursesList);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getStackTrace());
        }

    }

    /**
     * Show Lable Info
     */
    public void showLableInfoAccount() {
        try {
            DatabaseModel databaseModel = new DatabaseModel();

            AccountController accountController = new AccountController();

            accountController = databaseModel.accountIDFind(GlobalConstants.globalConst_account_id);
            lblAccountID.setText(Integer.toString(accountController.getAccountId()));
            lblFirstName.setText(accountController.getFirstName());
            lblLastName.setText(accountController.getLastName());
            lblTc.setText(accountController.getTc());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getStackTrace());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlPersonalInfo = new javax.swing.JPanel();
        lblAccountID = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblTc = new javax.swing.JLabel();
        jPnlCoursesOfStudent = new javax.swing.JPanel();
        jScrPnICoursesOfStudentList = new javax.swing.JScrollPane();
        tblCoursesOfStudentList = new javax.swing.JTable();
        pnlRecordButtonSet = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        pnlScrollPaneInstructorOfCoursesList = new javax.swing.JPanel();
        jScrollPaneInstructorOfCoursesList = new javax.swing.JScrollPane();
        tblInstructorOfCoursesList = new javax.swing.JTable();

        setClosable(true);

        jPnlPersonalInfo.setBackground(new java.awt.Color(242, 200, 119));

        lblAccountID.setText("jLabel1");

        lblFirstName.setText("First Name");

        jLabel2.setText("Last Name :");

        jLabel3.setText("TC :");

        jLabel4.setText("First Name :");

        lblLastName.setText("Last Name");

        lblTc.setText("Last Name");

        javax.swing.GroupLayout jPnlPersonalInfoLayout = new javax.swing.GroupLayout(jPnlPersonalInfo);
        jPnlPersonalInfo.setLayout(jPnlPersonalInfoLayout);
        jPnlPersonalInfoLayout.setHorizontalGroup(
            jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlPersonalInfoLayout.createSequentialGroup()
                .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlPersonalInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTc)
                            .addComponent(lblLastName)
                            .addComponent(lblFirstName)))
                    .addGroup(jPnlPersonalInfoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblAccountID)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPnlPersonalInfoLayout.setVerticalGroup(
            jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlPersonalInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAccountID)
                .addGap(12, 12, 12)
                .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblLastName))
                .addGap(12, 12, 12)
                .addGroup(jPnlPersonalInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblTc))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jPnlCoursesOfStudent.setBackground(new java.awt.Color(242, 200, 119));

        jScrPnICoursesOfStudentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrPnICoursesOfStudentListMouseClicked(evt);
            }
        });

        tblCoursesOfStudentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curses Code", "Courses Name", "Curses Credit", "First Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCoursesOfStudentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCoursesOfStudentListMouseClicked(evt);
            }
        });
        jScrPnICoursesOfStudentList.setViewportView(tblCoursesOfStudentList);

        javax.swing.GroupLayout jPnlCoursesOfStudentLayout = new javax.swing.GroupLayout(jPnlCoursesOfStudent);
        jPnlCoursesOfStudent.setLayout(jPnlCoursesOfStudentLayout);
        jPnlCoursesOfStudentLayout.setHorizontalGroup(
            jPnlCoursesOfStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlCoursesOfStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrPnICoursesOfStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPnlCoursesOfStudentLayout.setVerticalGroup(
            jPnlCoursesOfStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlCoursesOfStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrPnICoursesOfStudentList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlRecordButtonSet.setBackground(new java.awt.Color(244, 130, 17));

        btnAdd.setText("Save");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Select Courses Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRecordButtonSetLayout = new javax.swing.GroupLayout(pnlRecordButtonSet);
        pnlRecordButtonSet.setLayout(pnlRecordButtonSetLayout);
        pnlRecordButtonSetLayout.setHorizontalGroup(
            pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecordButtonSetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRecordButtonSetLayout.setVerticalGroup(
            pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecordButtonSetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRecordButtonSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlScrollPaneInstructorOfCoursesList.setBackground(new java.awt.Color(239, 160, 28));

        jScrollPaneInstructorOfCoursesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneInstructorOfCoursesListMouseClicked(evt);
            }
        });

        tblInstructorOfCoursesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInstructorOfCoursesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInstructorOfCoursesListMouseClicked(evt);
            }
        });
        jScrollPaneInstructorOfCoursesList.setViewportView(tblInstructorOfCoursesList);

        javax.swing.GroupLayout pnlScrollPaneInstructorOfCoursesListLayout = new javax.swing.GroupLayout(pnlScrollPaneInstructorOfCoursesList);
        pnlScrollPaneInstructorOfCoursesList.setLayout(pnlScrollPaneInstructorOfCoursesListLayout);
        pnlScrollPaneInstructorOfCoursesListLayout.setHorizontalGroup(
            pnlScrollPaneInstructorOfCoursesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScrollPaneInstructorOfCoursesListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneInstructorOfCoursesList, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlScrollPaneInstructorOfCoursesListLayout.setVerticalGroup(
            pnlScrollPaneInstructorOfCoursesListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScrollPaneInstructorOfCoursesListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneInstructorOfCoursesList, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPnlPersonalInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPnlCoursesOfStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlRecordButtonSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlScrollPaneInstructorOfCoursesList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPnlCoursesOfStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPnlPersonalInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlScrollPaneInstructorOfCoursesList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRecordButtonSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AddCourseStudentModel addCourseStudentModel = new AddCourseStudentModel();
        AddCourseStudentController addCourseStudentController = new AddCourseStudentController();

        if (Integer.parseInt(lblAccountID.getText()) > 0) {

            addCourseStudentModel.deleteRecord(Integer.parseInt(lblAccountID.getText()));
            DefaultTableModel model = (DefaultTableModel) tblCoursesOfStudentList.getModel();

            for (int count = 0; count < model.getRowCount(); count++) {
                addCourseStudentController.setAccountId(GlobalConstants.globalConst_account_id);
                addCourseStudentController.setInstructionOfCourseId(addCourseStudentModel.isInstructionOfCourseID(
                        model.getValueAt(count, 0).toString(), // Course Code 
                        model.getValueAt(count, 3).toString(), // Instructor First Name
                        model.getValueAt(count, 4).toString())); // Instructor Last Name
                addCourseStudentController.setCredit(Short.valueOf(model.getValueAt(count, 2).toString()));
                addCourseStudentController.setMidterm(0);
                addCourseStudentController.setFinalExam(0);
                
                addCourseStudentModel.addCourseStudentRecord(addCourseStudentController);
            }
        }
        JOptionPane.showMessageDialog(null, "Courses Saved");
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblCoursesOfStudentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCoursesOfStudentListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCoursesOfStudentListMouseClicked

    private void tblInstructorOfCoursesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInstructorOfCoursesListMouseClicked
        int selectedRow = tblInstructorOfCoursesList.getSelectedRow();
        DefaultTableModel modelCourses = (DefaultTableModel) tblInstructorOfCoursesList.getModel();

        String courseCode = modelCourses.getValueAt(selectedRow, 1).toString();

        if (filter(courseCode)) {

            JOptionPane.showMessageDialog(null, "Same Course !");

        } else {
            DefaultTableModel modelCoursesOfStudent = (DefaultTableModel) tblCoursesOfStudentList.getModel();
            String arrayHeader[] = {"Courses Code", "Courses Name", "Courses Credit", "First Name", "Last Name"};
            modelCoursesOfStudent.addRow(new Object[]{
                modelCourses.getValueAt(selectedRow, 1).toString(),
                modelCourses.getValueAt(selectedRow, 2).toString(),
                modelCourses.getValueAt(selectedRow, 3).toString(),
                modelCourses.getValueAt(selectedRow, 4).toString(),
                modelCourses.getValueAt(selectedRow, 5).toString()});
            tblCoursesOfStudentList.setModel(modelCoursesOfStudent);
            jScrPnICoursesOfStudentList.setViewportView(tblCoursesOfStudentList);
        }
    }//GEN-LAST:event_tblInstructorOfCoursesListMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        AddCourseStudentModel addCourseStudentModel = new AddCourseStudentModel();
        addCourseStudentModel.deleteRecord(Integer.parseInt(lblAccountID.getText()));
        JOptionPane.showMessageDialog(null, "Delete Courses");
        showAddCourseOfStudent();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jScrPnICoursesOfStudentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrPnICoursesOfStudentListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrPnICoursesOfStudentListMouseClicked

    private void jScrollPaneInstructorOfCoursesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneInstructorOfCoursesListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPaneInstructorOfCoursesListMouseClicked

    /**
     * To Filter Table Row data info
     */
    private boolean filter(String query) {
        boolean status = true;
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tblCoursesOfStudentList.getModel());
        tblCoursesOfStudentList.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
        if (tblCoursesOfStudentList.getRowCount() > 0) {
            status = true;
            query = "";
            tr.setRowFilter(RowFilter.regexFilter(query));
        } else {
            status = false;
            query = "";
            tr.setRowFilter(RowFilter.regexFilter(query));
        }
        return status;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPnlCoursesOfStudent;
    private javax.swing.JPanel jPnlPersonalInfo;
    private javax.swing.JScrollPane jScrPnICoursesOfStudentList;
    private javax.swing.JScrollPane jScrollPaneInstructorOfCoursesList;
    private javax.swing.JLabel lblAccountID;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblTc;
    private javax.swing.JPanel pnlRecordButtonSet;
    private javax.swing.JPanel pnlScrollPaneInstructorOfCoursesList;
    private javax.swing.JTable tblCoursesOfStudentList;
    private javax.swing.JTable tblInstructorOfCoursesList;
    // End of variables declaration//GEN-END:variables
}
